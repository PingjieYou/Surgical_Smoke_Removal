import matplotlib.pyplot as plt
import numpy as np
from matplotlib.patches import Patch

# 设置全局样式
plt.style.use('seaborn-v0_8-pastel')

# 数据准备
x = np.arange(50)

# 完整数据集
cycle_gan_data = {
     "PFAN": [28.391, 28.442, 28.501, 28.351, 28.465, 28.136, 28.458, 28.42, 28.383, 28.407,
             28.47, 28.407, 28.337, 28.293, 28.505, 28.257, 28.245, 28.385, 28.473, 28.49,
             28.325, 28.519, 28.441, 28.451, 28.533, 28.38, 28.293, 28.461, 28.304, 28.421,
             28.516, 28.428, 28.552, 28.445, 28.546, 28.493, 28.471, 28.552, 28.548, 28.525,
             28.442, 28.405, 28.487, 28.546, 28.595, 28.547, 28.528, 28.613, 28.356, 28.477],
    
    "ResNet6": [28.113, 28.268, 28.286, 28.331, 28.294, 28.289, 28.336, 28.236, 28.192, 28.289,
               28.2, 28.237, 28.268, 28.277, 28.248, 28.304, 28.219, 28.142, 28.235, 28.204,
               28.253, 28.047, 28.435, 28.185, 28.294, 28.343, 28.178, 28.237, 28.297, 28.215,
               28.217, 28.33, 28.32, 28.259, 28.23, 28.273, 28.199, 28.265, 28.179, 28.231,
               28.309, 28.222, 28.402, 28.247, 28.15, 28.314, 28.272, 28.187, 28.3, 28.198],
    
    "ResNet9": [28.193, 28.251, 28.222, 28.12, 28.102, 28.359, 28.382, 28.276, 28.263, 28.26,
               28.312, 28.304, 28.37, 28.264, 28.362, 28.174, 28.197, 28.437, 28.223, 28.188,
               28.075, 28.183, 28.278, 28.141, 28.149, 28.219, 28.133, 28.231, 28.29, 28.261,
               28.182, 28.327, 28.177, 28.404, 28.397, 28.283, 28.455, 28.409, 28.434, 28.103,
               28.345, 28.177, 28.241, 28.118, 28.109, 28.246, 28.372, 28.263, 28.078, 28.214],
    
    "SwinUNet": [28.135, 28.15, 28.249, 28.357, 28.338, 28.125, 28.356, 28.41, 28.358, 28.34,
                28.277, 28.268, 28.264, 28.356, 28.327, 28.143, 28.199, 28.064, 28.29, 28.203,
                28.22, 28.091, 28.188, 28.063, 28.137, 28.132, 28.243, 28.217, 28.182, 28.313,
                28.139, 28.352, 28.205, 28.339, 28.233, 28.289, 28.3, 28.312, 28.363, 28.394,
                28.39, 28.231, 28.347, 28.393, 28.333, 28.318, 28.287, 28.363, 28.228, 28.209],
    
    "U-Net128": [28.031, 28.099, 28.142, 28.166, 28.195, 28.139, 28.219, 28.238, 28.181, 28.202,
                28.201, 28.196, 28.206, 28.203, 28.219, 28.112, 28.11, 28.074, 28.113, 28.188,
                28.117, 28.098, 28.128, 28.145, 28.119, 28.071, 28.203, 28.098, 28.14, 28.103,
                28.099, 28.172, 28.126, 28.147, 28.155, 28.204, 28.143, 28.189, 28.112, 28.192,
                28.184, 28.253, 28.095, 28.122, 28.156, 28.111, 28.151, 28.148, 28.112, 28.168],
    
    "U-Net256": [28.102, 28.084, 28.129, 28.262, 28.185, 28.158, 28.208, 28.225, 28.121, 28.109,
                28.139, 28.142, 28.108, 28.127, 28.134, 28.149, 28.13, 28.131, 28.184, 28.166,
                28.142, 28.124, 28.186, 28.174, 28.192, 28.251, 28.274, 28.121, 28.273, 28.219,
                28.305, 28.166, 28.269, 28.223, 28.311, 28.268, 28.425, 28.316, 28.262, 28.377,
                28.28, 28.268, 28.262, 28.236, 28.062, 28.195, 28.199, 28.205, 28.099, 28.192]}

atmosphere_gan_data = {
    "PFAN": [28.564, 28.578, 28.655, 28.632, 28.607, 28.696, 28.421, 28.669, 28.559, 28.596, 
             28.406, 28.568, 28.695, 28.538, 28.412, 28.673, 28.706, 28.652, 28.647, 28.536, 
             28.426, 28.708, 28.64, 28.428, 28.681, 28.679, 28.751, 28.606, 28.569, 28.746, 
             28.832, 28.709, 28.917, 28.909, 28.729, 28.713, 28.854, 28.541, 28.734, 28.814, 
             28.747, 28.708, 28.861, 28.826, 28.682, 28.691, 28.603, 28.731, 28.861, 28.664],
    
    "ResNet6": [28.325, 28.378, 28.444, 28.502, 28.383, 28.562, 28.44, 28.499, 28.442, 28.482, 
               28.496, 28.55, 28.49, 28.371, 28.48, 28.531, 28.49, 28.434, 28.6, 28.436, 
               28.441, 28.347, 28.254, 28.377, 28.392, 28.437, 28.526, 28.458, 28.427, 28.497, 
               28.394, 28.493, 28.561, 28.572, 28.494, 28.562, 28.536, 28.564, 28.499, 28.538, 
               28.513, 28.567, 28.547, 28.474, 28.657, 28.678, 28.567, 28.59, 28.512, 28.472],
    
    "ResNet9": [28.275, 28.298, 28.322, 28.282, 28.387, 28.381, 28.448, 28.356, 28.42, 28.382, 
               28.503, 28.422, 28.468, 28.464, 28.482, 28.418, 28.508, 28.342, 28.415, 28.492, 
               28.464, 28.422, 28.338, 28.424, 28.34, 28.542, 28.5, 28.356, 28.236, 28.277, 
               28.342, 28.279, 28.45, 28.428, 28.476, 28.477, 28.512, 28.521, 28.529, 28.451, 
               28.523, 28.333, 28.513, 28.386, 28.511, 28.311, 28.431, 28.49, 28.403, 28.361],
    
    "SwinUNet": [28.225, 28.306, 28.387, 28.433, 28.504, 28.564, 28.645, 28.664, 28.746, 28.762, 
                28.746, 28.76, 28.766, 28.707, 28.731, 28.766, 28.767, 28.823, 28.872, 28.931, 
                28.744, 28.941, 28.752, 28.88, 28.829, 28.907, 28.951, 29.071, 28.87, 29.031, 
                29.153, 29.315, 29.181, 29.211, 29.318, 29.336, 29.322, 29.283, 29.142, 29.241, 
                29.107, 29.259, 29.097, 29.165, 29.226, 29.24, 29.085, 29.095, 29.214, 29.108],
    
    "U-Net128": [28.178, 28.352, 28.389, 28.37, 28.361, 28.581, 28.531, 28.504, 28.607, 28.685, 
                28.671, 28.668, 28.694, 28.709, 28.656, 28.689, 28.656, 28.676, 28.589, 28.701, 
                28.645, 28.743, 28.636, 28.639, 28.633, 28.627, 28.729, 28.833, 28.788, 28.802, 
                28.803, 28.797, 28.922, 28.882, 28.945, 28.954, 28.932, 28.861, 28.97, 28.954, 
                28.864, 28.908, 28.937, 28.945, 28.955, 28.722, 28.89, 28.774, 28.787, 28.831],
    
    "U-Net256": [28.19, 28.402, 28.347, 28.374, 28.442, 28.557, 28.456, 28.512, 28.487, 28.544, 
                28.6, 28.57, 28.47, 28.686, 28.666, 28.652, 28.691, 28.59, 28.618, 28.492, 
                28.712, 28.652, 28.607, 28.532, 28.588, 28.791, 28.744, 28.742, 28.684, 28.73, 
                28.641, 28.673, 28.711, 28.737, 28.824, 28.919, 28.93, 28.875, 28.874, 28.897, 
                28.906, 28.809, 28.685, 28.793, 28.716, 28.752, 28.81, 28.657, 28.639, 28.655]}

# 配色方案保持不变
colors = {
    "PFAN": "#AEC6CF",  # 柔和天蓝
    "ResNet6": "#FFD1A4",  # 柔和蜜桃橙
    "ResNet9": "#C5E1A5",  # 柔和青绿
    "SwinUNet": "#F4C2C2",  # 柔和玫瑰粉
    "U-Net128": "#D7E3FC",  # 柔和粉蓝
    "U-Net256": "#E6D5F8"   # 柔和薰衣草紫
}

# 创建画布
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(22, 7.5), 
                        sharey=True, 
                        gridspec_kw={'wspace': 0.05})
fig.patch.set_facecolor('#FDFDFD')  # 极浅灰背景

# 绘图参数
plot_params = {
    'linewidth': 3,
    'alpha': 0.92,
    'solid_capstyle': 'round',
    'solid_joinstyle': 'round'
}

# ========== 左图 CycleGAN ==========
for key in cycle_gan_data:
    ax1.plot(x, cycle_gan_data[key], 
            color=colors[key], 
            **plot_params)

# ========== 右图 Ours+CycleGAN ==========
for key in atmosphere_gan_data:
    ax2.plot(x, atmosphere_gan_data[key], 
            color=colors[key], 
            **plot_params)

# ========== 通用样式设置 ==========
# 标题和标签样式
title_style = {
    'fontsize': 16,
    'color': '#3A3A3A',
    'fontweight': 'semibold',
    'pad': 18
}

label_style = {
    'fontsize': 13,
    'color': '#5A5A5A',
    'labelpad': 10
}

ax1.set_title('CycleGAN', **title_style)
ax2.set_title('Ours+CycleGAN', **title_style)

ax1.set_xlabel('Training Epochs', **label_style)
ax2.set_xlabel('Training Epochs', **label_style)
ax1.set_ylabel('PSNR Score', **label_style)

# 网格和坐标轴设置
grid_style = {
    'color': '#EDEDED',
    'linestyle': '-',
    'linewidth': 1.2,
    'alpha': 0.9
}

for ax in (ax1, ax2):
    # 背景和网格
    ax.set_facecolor('#FFFFFF')
    ax.grid(which='major', **grid_style)
    ax.grid(which='minor', color='#F5F5F5', linestyle=':', linewidth=0.8)
    
    # 坐标轴样式
    ax.tick_params(axis='both', which='both', 
                  colors='#7F7F7F', 
                  length=5, width=1,
                  labelsize=11)
    ax.minorticks_on()
    
    # 边框设置
    for spine in ax.spines.values():
        spine.set_color('#D6D6D6')
        spine.set_linewidth(1)
    
    # Y轴范围
    ax.set_ylim(28, 29.4)
    
    # 添加参考线
    for y in [0.3, 0.5, 0.7, 0.8]:
        ax.axhline(y, color='#EAEAEA', linestyle='--', linewidth=0.8, zorder=0)

# ========== 图例设计 ==========
legend_elements = [Patch(facecolor=colors[key], 
                  edgecolor='#E0E0E0',
                  label=key) for key in colors]

legend = fig.legend(
    handles=legend_elements,
    loc='upper center',
    bbox_to_anchor=(0.5, 1.01),
    ncol=6,
    frameon=True,
    framealpha=1,
    edgecolor='#E0E0E0',
    facecolor='#FFFFFF',
    fontsize=12,
    borderpad=1.2,
    handlelength=2,
    handleheight=1.2,
    handletextpad=0.8,
    columnspacing=1.5
)

# ========== 整体标题和布局 ==========
fig.suptitle('', 
             y=1.00,
             fontsize=18,
             color='#2A2A2A',
             fontweight='semibold')

plt.tight_layout()
plt.subplots_adjust(top=0.86, bottom=0.12)

plt.show(